import androidx.compose.ui.graphics.painter.BitmapPainter
import androidx.compose.ui.res.loadImageBitmap
import androidx.compose.ui.res.useResource

object Textures {

    val PLACEHOLDER = BitmapPainter(useResource("ui/placeholder.png", ::loadImageBitmap))
    val PLACEHOLDER_SELECTED = BitmapPainter(useResource("ui/placeholder_selected.png", ::loadImageBitmap))

    val UNKNOWN = BitmapPainter(useResource("ui/unknown.png", ::loadImageBitmap))
    val RANDOM_SKIN = BitmapPainter(useResource("ui/random_skin.png", ::loadImageBitmap))

    val STAR_CLOSED = BitmapPainter(useResource("ui/star_closed.png", ::loadImageBitmap))
    val STAR_EMPTY = BitmapPainter(useResource("ui/star_empty.png", ::loadImageBitmap))
    val STAR_1 = BitmapPainter(useResource("ui/star_1.png", ::loadImageBitmap))
    val STAR_2 = BitmapPainter(useResource("ui/star_2.png", ::loadImageBitmap))
    val STAR_3 = BitmapPainter(useResource("ui/star_3.png", ::loadImageBitmap))
    val STAR_4 = BitmapPainter(useResource("ui/star_4.png", ::loadImageBitmap))
    val STAR_5 = BitmapPainter(useResource("ui/star_5.png", ::loadImageBitmap))
    val SELECT_UP = BitmapPainter(useResource("decor/select_up.png", ::loadImageBitmap))

    val HEART = BitmapPainter(useResource("ui/heart.png", ::loadImageBitmap))
    val HEART_EMPTY = BitmapPainter(useResource("ui/heart_empty.png", ::loadImageBitmap))
    val JUMP = BitmapPainter(useResource("ui/jump.png", ::loadImageBitmap))
    val JUMP_EMPTY = BitmapPainter(useResource("ui/jump_empty.png", ::loadImageBitmap))

    val PLAYER_CLASSIC_IDLE = BitmapPainter(useResource("player/player_classic_idle.png", ::loadImageBitmap))
    val PLAYER_CLASSIC_MOVE1 = BitmapPainter(useResource("player/player_classic_move1.png", ::loadImageBitmap))
    val PLAYER_CLASSIC_MOVE2 = BitmapPainter(useResource("player/player_classic_move2.png", ::loadImageBitmap))
    val PLAYER_CLASSIC_JUMP = BitmapPainter(useResource("player/player_classic_jump.png", ::loadImageBitmap))

    val PLAYER_CACTUS_IDLE = BitmapPainter(useResource("player/player_cactus_idle.png", ::loadImageBitmap))
    val PLAYER_CACTUS_MOVE1 = BitmapPainter(useResource("player/player_cactus_move1.png", ::loadImageBitmap))
    val PLAYER_CACTUS_MOVE2 = BitmapPainter(useResource("player/player_cactus_move2.png", ::loadImageBitmap))
    val PLAYER_CACTUS_JUMP = BitmapPainter(useResource("player/player_cactus_jump.png", ::loadImageBitmap))

    val PLAYER_KNIGHT_IDLE = BitmapPainter(useResource("player/player_knight_idle.png", ::loadImageBitmap))
    val PLAYER_KNIGHT_MOVE1 = BitmapPainter(useResource("player/player_knight_move1.png", ::loadImageBitmap))
    val PLAYER_KNIGHT_MOVE2 = BitmapPainter(useResource("player/player_knight_move2.png", ::loadImageBitmap))
    val PLAYER_KNIGHT_JUMP = BitmapPainter(useResource("player/player_knight_jump.png", ::loadImageBitmap))

    val PLAYER_APPLE_IDLE = BitmapPainter(useResource("player/player_apple_idle.png", ::loadImageBitmap))
    val PLAYER_APPLE_MOVE1 = BitmapPainter(useResource("player/player_apple_move1.png", ::loadImageBitmap))
    val PLAYER_APPLE_MOVE2 = BitmapPainter(useResource("player/player_apple_move2.png", ::loadImageBitmap))
    val PLAYER_APPLE_JUMP = BitmapPainter(useResource("player/player_apple_jump.png", ::loadImageBitmap))

    val PLAYER_ALIEN_IDLE = BitmapPainter(useResource("player/player_alien_idle.png", ::loadImageBitmap))
    val PLAYER_ALIEN_MOVE1 = BitmapPainter(useResource("player/player_alien_move1.png", ::loadImageBitmap))
    val PLAYER_ALIEN_MOVE2 = BitmapPainter(useResource("player/player_alien_move2.png", ::loadImageBitmap))
    val PLAYER_ALIEN_JUMP = BitmapPainter(useResource("player/player_alien_jump.png", ::loadImageBitmap))

    val PLAYER_FRANKIE_IDLE = BitmapPainter(useResource("player/player_frankie_idle.png", ::loadImageBitmap))
    val PLAYER_FRANKIE_MOVE1 = BitmapPainter(useResource("player/player_frankie_move1.png", ::loadImageBitmap))
    val PLAYER_FRANKIE_MOVE2 = BitmapPainter(useResource("player/player_frankie_move2.png", ::loadImageBitmap))
    val PLAYER_FRANKIE_JUMP = BitmapPainter(useResource("player/player_frankie_jump.png", ::loadImageBitmap))

    val WALKER1 = BitmapPainter(useResource("enemies/walker1.png", ::loadImageBitmap))
    val WALKER2 = BitmapPainter(useResource("enemies/walker2.png", ::loadImageBitmap))

    val HOPPER = BitmapPainter(useResource("enemies/hopper.png", ::loadImageBitmap))
    val HOPPER_LOAD1 = BitmapPainter(useResource("enemies/hopper_load1.png", ::loadImageBitmap))
    val HOPPER_LOAD2 = BitmapPainter(useResource("enemies/hopper_load2.png", ::loadImageBitmap))
    val HOPPER_JUMP = BitmapPainter(useResource("enemies/hopper_jump.png", ::loadImageBitmap))

    val WITCH = BitmapPainter(useResource("enemies/witch.png", ::loadImageBitmap))
    val WITCH_BOTTLE = BitmapPainter(useResource("enemies/witch_bottle.png", ::loadImageBitmap))

    val DOOR_OPEN = BitmapPainter(useResource("surround/door_open.png", ::loadImageBitmap))
    val DOOR_CLOSED = BitmapPainter(useResource("surround/door_closed.png", ::loadImageBitmap))
    val KEY = BitmapPainter(useResource("surround/key.png", ::loadImageBitmap))

    val LADDER_TEXTURE = BitmapPainter(useResource("surround/ladder.png", ::loadImageBitmap))
    val VINE_TEXTURE = BitmapPainter(useResource("surround/vine.png", ::loadImageBitmap))

    val MOSS1_TEXTURE = BitmapPainter(useResource("decor/moss1.png", ::loadImageBitmap))
    val MOSS2_TEXTURE = BitmapPainter(useResource("decor/moss2.png", ::loadImageBitmap))
    val MOSS3_TEXTURE = BitmapPainter(useResource("decor/moss3.png", ::loadImageBitmap))

    val LEFT_CORNER_MOSS1 = BitmapPainter(useResource("decor/leftCorner_moss1.png", ::loadImageBitmap))
    val RIGHT_CORNER_MOSS1 = BitmapPainter(useResource("decor/rightCorner_moss1.png", ::loadImageBitmap))
    val LEFT_CORNER_MOSS2 = BitmapPainter(useResource("decor/leftCorner_moss2.png", ::loadImageBitmap))
    val RIGHT_CORNER_MOSS2 = BitmapPainter(useResource("decor/rightCorner_moss2.png", ::loadImageBitmap))
    val LEFT_CORNER_WOOD = BitmapPainter(useResource("decor/leftCorner_wood.png", ::loadImageBitmap))
    val RIGHT_CORNER_WOOD = BitmapPainter(useResource("decor/rightCorner_wood.png", ::loadImageBitmap))
    val HANG_LAMP = BitmapPainter(useResource("decor/lamp.png", ::loadImageBitmap))

    val PLATFORM_TEXTURE = BitmapPainter(useResource("surround/platform.png", ::loadImageBitmap))

    val SPIKE_TEXTURE = BitmapPainter(useResource("surround/spikes.png", ::loadImageBitmap))

    val COIN = BitmapPainter(useResource("surround/coin.png", ::loadImageBitmap))

    val WALL_SOLID = BitmapPainter(useResource("wall/wall_solid.png", ::loadImageBitmap))
    val WALL_NIPPLE_BOTTOM = BitmapPainter(useResource("wall/wall_nippleBottom.png", ::loadImageBitmap))
    val WALL_NIPPLE_LEFT = BitmapPainter(useResource("wall/wall_nippleLeft.png", ::loadImageBitmap))
    val WALL_NIPPLE_RIGHT = BitmapPainter(useResource("wall/wall_nippleRight.png", ::loadImageBitmap))
    val WALL_NIPPLE_TOP = BitmapPainter(useResource("wall/wall_nippleTop.png", ::loadImageBitmap))
    val WALL_BOTTOM_LEFT = BitmapPainter(useResource("wall/wall_bottomLeft.png", ::loadImageBitmap))
    val WALL_BOTTOM_RIGHT = BitmapPainter(useResource("wall/wall_bottomRight.png", ::loadImageBitmap))
    val WALL_TOP_LEFT = BitmapPainter(useResource("wall/wall_topLeft.png", ::loadImageBitmap))
    val WALL_TOP_RIGHT = BitmapPainter(useResource("wall/wall_topRight.png", ::loadImageBitmap))
    val WALL_HORIZONTAL = BitmapPainter(useResource("wall/wall_horizontal.png", ::loadImageBitmap))
    val WALL_VERTICAL = BitmapPainter(useResource("wall/wall_vertical.png", ::loadImageBitmap))
    val WALL_BOTTOM = BitmapPainter(useResource("wall/wall_bottom.png", ::loadImageBitmap))
    val WALL_LEFT = BitmapPainter(useResource("wall/wall_left.png", ::loadImageBitmap))
    val WALL_RIGHT = BitmapPainter(useResource("wall/wall_right.png", ::loadImageBitmap))
    val WALL_TOP = BitmapPainter(useResource("wall/wall_top.png", ::loadImageBitmap))

    val CHAR_0 = BitmapPainter(useResource("chars/char_0.png", ::loadImageBitmap))
    val CHAR_1 = BitmapPainter(useResource("chars/char_1.png", ::loadImageBitmap))
    val CHAR_2 = BitmapPainter(useResource("chars/char_2.png", ::loadImageBitmap))
    val CHAR_3 = BitmapPainter(useResource("chars/char_3.png", ::loadImageBitmap))
    val CHAR_4 = BitmapPainter(useResource("chars/char_4.png", ::loadImageBitmap))
    val CHAR_5 = BitmapPainter(useResource("chars/char_5.png", ::loadImageBitmap))
    val CHAR_6 = BitmapPainter(useResource("chars/char_6.png", ::loadImageBitmap))
    val CHAR_7 = BitmapPainter(useResource("chars/char_7.png", ::loadImageBitmap))
    val CHAR_8 = BitmapPainter(useResource("chars/char_8.png", ::loadImageBitmap))
    val CHAR_9 = BitmapPainter(useResource("chars/char_9.png", ::loadImageBitmap))
    val CHAR_A = BitmapPainter(useResource("chars/char_a.png", ::loadImageBitmap))
    val CHAR_B = BitmapPainter(useResource("chars/char_b.png", ::loadImageBitmap))
    val CHAR_C = BitmapPainter(useResource("chars/char_c.png", ::loadImageBitmap))
    val CHAR_D = BitmapPainter(useResource("chars/char_d.png", ::loadImageBitmap))
    val CHAR_E = BitmapPainter(useResource("chars/char_e.png", ::loadImageBitmap))
    val CHAR_F = BitmapPainter(useResource("chars/char_f.png", ::loadImageBitmap))
    val CHAR_G = BitmapPainter(useResource("chars/char_g.png", ::loadImageBitmap))
    val CHAR_H = BitmapPainter(useResource("chars/char_h.png", ::loadImageBitmap))
    val CHAR_I = BitmapPainter(useResource("chars/char_i.png", ::loadImageBitmap))
    val CHAR_J = BitmapPainter(useResource("chars/char_j.png", ::loadImageBitmap))
    val CHAR_K = BitmapPainter(useResource("chars/char_k.png", ::loadImageBitmap))
    val CHAR_L = BitmapPainter(useResource("chars/char_l.png", ::loadImageBitmap))
    val CHAR_M = BitmapPainter(useResource("chars/char_m.png", ::loadImageBitmap))
    val CHAR_N = BitmapPainter(useResource("chars/char_n.png", ::loadImageBitmap))
    val CHAR_O = BitmapPainter(useResource("chars/char_o.png", ::loadImageBitmap))
    val CHAR_P = BitmapPainter(useResource("chars/char_p.png", ::loadImageBitmap))
    val CHAR_Q = BitmapPainter(useResource("chars/char_q.png", ::loadImageBitmap))
    val CHAR_R = BitmapPainter(useResource("chars/char_r.png", ::loadImageBitmap))
    val CHAR_S = BitmapPainter(useResource("chars/char_s.png", ::loadImageBitmap))
    val CHAR_T = BitmapPainter(useResource("chars/char_t.png", ::loadImageBitmap))
    val CHAR_U = BitmapPainter(useResource("chars/char_u.png", ::loadImageBitmap))
    val CHAR_V = BitmapPainter(useResource("chars/char_v.png", ::loadImageBitmap))
    val CHAR_W = BitmapPainter(useResource("chars/char_w.png", ::loadImageBitmap))
    val CHAR_X = BitmapPainter(useResource("chars/char_x.png", ::loadImageBitmap))
    val CHAR_Y = BitmapPainter(useResource("chars/char_y.png", ::loadImageBitmap))
    val CHAR_Z = BitmapPainter(useResource("chars/char_z.png", ::loadImageBitmap))
    val CHAR_BRA = BitmapPainter(useResource("chars/char_bra.png", ::loadImageBitmap))
    val CHAR_CKET = BitmapPainter(useResource("chars/char_cket.png", ::loadImageBitmap))
    val CHAR_SPACE = BitmapPainter(useResource("chars/char_space.png", ::loadImageBitmap))
    val CHAR_ARROW_LEFT = BitmapPainter(useResource("chars/char_arrow_left.png", ::loadImageBitmap))
    val CHAR_ARROW_RIGHT = BitmapPainter(useResource("chars/char_arrow_right.png", ::loadImageBitmap))
    val CHAR_COMMA = BitmapPainter(useResource("chars/char_comma.png", ::loadImageBitmap))
    val CHAR_DOT = BitmapPainter(useResource("chars/char_dot.png", ::loadImageBitmap))
    val CHAR_COLON = BitmapPainter(useResource("chars/char_colon.png", ::loadImageBitmap))

}